Installé elasticsearch (utilisez la VM installée Lundi)

apk add elasticsearch

apk add openjdk9 (installé la version de java version 9 compatible avec elasticsearch)

--------------

modification dans la config 

vi /etc/elasticsearch/jvm.options

=> mis + de RAM pour la machine Java Virtuelle 
-Xms2g
-Xmx2g

=> à la fin du fichier jvm.options
modifier une config 
initialement 
9-:-Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m 

9-:-Xlog:gc*,gc+age=trace,safepoint:file=/var/log/elasticsearch/gc.log:utctime,pid,tags:filecount=32,filesize=64m 

cd /var/log/elasticsearch

tail error.log

--------------

démarrer elastic search => rc-service elasticsearch start (via une connexion SSH)

lancer un terminal => connecté en ssh : ssh malik@192.168.1.103 
root 

une fois connecté => met en root 
su -
root 

rc-service elasticsearch start

lors que 1er du premier lancement 

* Caching service dependencies ...                                       [ ok ]
 * /var/lib/elasticsearch/_default: correcting owner
 * /var/lib/elasticsearch: correcting mode
 * /var/lib/elasticsearch: correcting owner
 * /var/lib/elasticsearch/_default/data: creating directory
 * /var/lib/elasticsearch/_default/data: correcting owner
 * /var/tmp/elasticsearch/_default: creating directory
 * /var/tmp/elasticsearch/_default: correcting owner
 * /var/lib/elasticsearch/_default/plugins: creating directory
 * /var/lib/elasticsearch/_default/plugins: correcting owner
 * /etc/elasticsearch/scripts: creating directory
 * /var/log/elasticsearch: correcting owner
 * Max open filedescriptors: 65536
 * vm.max_map_count: 262144
 * Starting Elasticsearch ...

 => top => un processus avec un user elastico qui fonctionne 


vim /etc/elasticsearch/elasticsearch.yml

aller à la ligne 55 
#network.host: 192.168.0.1
décommenter et remplacer 192.168.0.1 par 0.0.0.0

network.host: 0.0.0.0

rc-service elasticsearch restart

dans votre ordinateur lancer un navigateur web 

http://192.168.1.<103>:9200/ => page qui doit vous donner les caractéristiques de votre base de données Elastic Search 

coucou Pedro !!!!

-----------------------

Comment remplir Elastic Search 

=> le protocole HTTP pour faire des requêtes avec cette base de données 

=> API Rest 
verbe 
=> verbes du langage HTTP => GET / POST / PUT / DELETE 

url 
=> url :  http://host:port/[index]/[type]/[_action|id]

=> url :  http://192.168.1.103:9200/[index]/[type]/[_action|id]

index => base 
type => table 
_action => _search / _bulk ... mise à disposition pour ElasticSearch 
id 1 

=> objet en json 
{""}
client sqlite3 fichier.sqlite 
SELECT * FROM table 

GET  http://192.168.1.103:9200/etudiants/_search 

10h55 !! bon café !!


=> Postman (client http idéal pour communiquer avec n'importe quelle API Restfull)
ce logiciel est à installer sur votre ordinateur => https://www.postman.com/

télécharger et installez postman sur votre ordinateur :
https://www.postman.com/downloads/


CRUD 


à la place d'utiliser POSTMAN ou extension pour réaliser une requête http 

vous pouvez utiliser un terminal : saisir la commande suivante 
curl -X POST -H 'Content-Type: application/json' -i 'http://192.168.1.103:9200/toto/titi' --data '{
"nom" : "Alain",
"largeur" : 20,
"isAdmin" : 30
}'


{
    "_index":"toto", // base 
    "_type":"titi", // table
    "_id":"woDlDYcBY9hd4mJtgCri", // clé primaire 
    "_version":1,
    "result":"created",
    "_shards":{"total":2,"successful":1,"failed":0},
    "_seq_no":0,
    "_primary_term":1
}

POST http://192.168.1.103:9200/toto/titi/_bulk 

{"index":{}}
{"nom": "Benoit", "largeur": 50 , "isAdmin" : 30}
{"index":{}}
{"nom": "Céline", "largeur": 4 , "isAdmin" : 4}


// attention pour insert multiples => il ne fait pas sauter de ligne

POST http://192.168.1.103:9200/toto/titi/_bulk 
{"index":{}}
{"nom": "Charles", "largeur": 50 , "istest" : 30}
{"index":{}}
{"nom": "Emilie", "largeur": 4 , "istest" : 4}
saut de ligne 

// connaitre la liste des colonnes d'un type (table) 

GET http://192.168.1.103:9200/toto/titi/_mapping

si je veux réaliser un UPDATE sur un enregistrement dans la base 


GET http://192.168.1.103:9200/toto/titi/_search?q=Charles

PUT http://192.168.1.103:9200/toto/titi/yoDvDYcBY9hd4mJt3SrY
{
    "nom": "Charles", 
    "largeur": 600 , 
    "istest" : 30
}

// il faut remettre TOUS les champs ce qui doivent être modifiée ET ceux qui ne changent pas 

suppression 

DELETE http://192.168.1.103:9200/toto/titi/woDlDYcBY9hd4mJtgCri

Cas pratique :

Partie 1 :
Créer une nouvelle base exo1 et qui contient la table enonce

contient 3 documents / enregistrements

{
    description : "premier exo"
    nbPoint : 10,
    duree : 20
}
{
    description : "deuxieme exo"
    nbPoint : 30,
    duree : 5
}
{
    description : "dernier exo"
    nbPoint : 5,
    duree : 100
}

Partie 2 :
pouvez vous modifier le nombre de point du dernier exo => 5 => 40 